- content_for :title do
  = truncate(@division.name, length: 180)

.page-header
  %h1
    %small.pre-title= division_date_and_time(@division) + ", " + @division.australian_house_name
    = yield :title

#secondnavtabs
  %ul.nav.nav-tabs
    = nav_link("Summary", division_path2(@division), "Overview of division", @display.nil?)
    = nav_link("Policies", division_with_policy_path(@division, @policy), "Show or change the polices which vote on this division", @display == "policies")

- if user_signed_in?
  %form.form-inline.policyvote{:action => division_with_policy_path(@division, @policy), :method => "post"}
    %legend
      %p Connect this division with relevant policies.

      %p Please read policy definitions and the divisionâ€™s description before altering list.


    - if @division.policies
      - @division.policies.sort{|p1,p2| p1.name <=> p2.name }.each do |policy|
        %p
          People who are
          = link_to policy.name, policy
          - # TODO: Make this show the nice form of the vote e.g. No (Strong)
          would have voted '#{policy.vote_for_division(@division)}'

          - # TODO: Make this link work
          = link_to_if(user_signed_in?, "delete", "#", :class => "btn btn-sm btn-link")

    %fieldset
      %label People who are
      = select_tag "policies", options_from_collection_for_select(Policy.all, "id", "name"), size: 1, class: "form-control", :prompt => "Select related policy"

      would have
      %label voted
      - select_options = {'Non-voter' => '--',
                          'Aye (strong)' => 'aye3',
                          'Aye' => 'aye',
                          'Abstain' => 'both',
                          'No' => 'no',
                          'No (strong)' => 'no3'}
      = select_tag "vote#{@policy.id}", options_for_select(select_options, (@policy.vote_for_division(@division) || '--')), size: 1, class: "form-control", :prompt => "Select vote"

    %input.btn.btn-primary{:name => "submit", :type => "submit", :value => "Update"}>/

- else
  - if @division.policies
    - @division.policies.sort{|p1,p2| p1.name <=> p2.name }.each do |policy|
      %p
        People who are
        = link_to policy.name, policy
        would have voted '#{policy.vote_for_division(@division)}'

  %p
    = link_to "Login", new_user_session_path, title: "Login to edit policies"
    to edit policy connections.

