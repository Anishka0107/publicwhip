- content_for :title do
  - if @rdisplay2 == "rebels"
    Rebellions
  - elsif @party
    = @party
  - else
    Divisions
  \—
  - if @rdisplay == "all"
    All divisions on record
  - else
    = Parliament.all[@rdisplay][:name]
  - if @house == "representatives" && @party.nil?
    \— Representatives only
  - elsif @house == "senate" && @party.nil?
    \— Senate only
  - if @sort
    (sorted by #{@sort})

.page-header
  %h1= yield :title

= render "divisions_chooser", rdisplay: @rdisplay, rdisplay2: @rdisplay2, house: @house, parties: @parties

%p.lead
  In the Parliament of Australia votes are counted in <em>divisions</em>. Through these votes, elected members shape legislation and enact Government policy. #{link_to "Learn more...", help_path(anchor: "jargon")}

- if @rdisplay2 == "rebels"
  %p
    This is a table showing only the divisions where there were at
    least ten #{link_to "rebels", help_path(anchor: "clarify")}.

%nav.btn-group
  = nav_button_link("Both houses", divisions_path(params.merge(house: nil)), "All divisions", @house.nil?)
  = nav_button_link("Representatives", divisions_path(params.merge(house: "representatives")), "Divisions for the House of Representatives", @house == "representatives")
  = nav_button_link("Senate", divisions_path(params.merge(house: "senate")), "Divisions from the Senate", @house == 'senate')

- if @party
  %table.table
    %thead
      %tr
        %th= link_to_unless @sort.nil?, "Date", divisions_path(params.merge(sort: nil)), title: "Sort by date"
        %th Time
        %th= link_to_unless @sort == "subject", "Subject", divisions_path(params.merge(sort: "subject")), title: "Sort by subject"
        %th
          = @party
          = link_to_unless @sort == "turnout", "Turnout", divisions_path(params.merge(sort: "turnout")), title: "Sort by turnout"
        %th Loyal
        %th= link_to_unless @sort == "rebellions", "Rebels", divisions_path(params.merge(sort: "rebellions")), title: "Sort by rebellions"
        -# TODO Need to remove Boths
        - if @house == "representatives"
          %th Boths
    %tbody
      - @divisions.each do |division|
        -# TODO temporary variable Eek!
        - whip = division.whips.where(party: @party).first
        %tr{:class => ("rebel" if @rdisplay2 != "rebels" && division.rebellious?)}
          %td= formatted_date(division.date, true)
          %td= division.clock_time
          %td= link_to truncate(division.name, length: 180), division_path2(division)
          -# TODO Here it's called Turnout. Elsewhere it's called Attendance. Bad!
          %td= fraction_to_percentage_display(whip.attendance_fraction, precision: 1)
          %td= whip.no_loyal
          %td= whip.no_rebels
          - if @house == "representatives"
            %td 0
- else
  %table.table
    %thead
      %tr
        - if @house.nil?
          %th House
        %th= link_to_unless @sort.nil?, "Date", divisions_path(params.merge(sort: nil)), title: "Sort by date"
        %th Time
        %th= link_to_unless @sort == "subject", "Subject", divisions_path(params.merge(sort: "subject")), title: "Sort by subject"
        %th
          = link_to_unless @sort == "rebellions", "Rebels", divisions_path(params.merge(sort: "rebellions")), title: "Sort by rebellions"
          %br>/
          (#{link_to "explain..", help_path(anchor: "clarify")})
        %th Outcome
        %th= link_to_unless @sort == "turnout", "Turnout", divisions_path(params.merge(sort: "turnout")), title: "Sort by turnout"
    %tbody
      -# Avoid calling out to SQL again
      - if @divisions.to_a.empty?
        %tr
          %td{colspan: @house.nil? ? 9 : 8} no votes listed
      - else
        - @divisions.each do |division|
          %tr{:class => ("rebel" if @rdisplay2 != "rebels" && @sort != "rebellions" && division.rebellious?)}
            - if @house.nil?
              %td{:class => division.house}= division.australian_house_name
            %td= formatted_date(division.date, true)
            %td= division.clock_time
            %td= link_to truncate(division.name, length: 180), division_path2(division)
            %td= division.rebellions
            %td= division_outcome_with_score(division)
            %td= fraction_to_percentage_display(division.attendance_fraction, precision: 1)
